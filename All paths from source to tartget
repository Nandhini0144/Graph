class Solution {
    public void dfs(List<List<Integer>> list,int[][] graph,List<Integer> chain,int n)
    {
        if(n==graph.length-1)
            list.add(new ArrayList(chain));
        else
        {
            //System.out.println(graph[n].length);
            for(int i=0;i<graph[n].length;i++)
            {
                // System.out.println(graph[n][i]);
                chain.add(graph[n][i]);
                dfs(list,graph,chain,graph[n][i]);
                chain.remove(Integer.valueOf(graph[n][i]));
            }
        }
    }
    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {
        List<List<Integer>> list=new ArrayList<>();
        List<Integer> chain=new ArrayList<>();
        chain.add(0);
        int n=0;
        dfs(list,graph,chain,n);
        return list;
    }
}
